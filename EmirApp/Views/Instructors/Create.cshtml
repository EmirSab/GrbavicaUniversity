@model EmirApp.Models.Instructor

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "CreateForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Instructor</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstMidName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstMidName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstMidName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OfficeAssignment.Location, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OfficeAssignment.Location)
                @Html.ValidationMessageFor(model => model.OfficeAssignment.Location)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <table>
                    <tr>
                        @{
                            int cnt = 0;
                            List<EmirApp.ViewModels.AssignedCourseData> courses = ViewBag.Courses;

                            foreach (var course in courses)
                            {
                                if (cnt++ % 3 == 0)
                                {
                                @:</tr><tr>
                                }
                                @:<td>
                                    <input type="checkbox"
                                           name="selectedCourses"
                                           value="@course.CourseID"
                                           @(Html.Raw(course.Assigned ? "checked=\"checked\"" : "")) />
                                    @course.CourseID @:  @course.Title
                                @:</td>
                            }
                        @:</tr>
                        }
                    </table>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" onclick="Validate(this, event);" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Scripts/sweetalert.js"></script>
<link href="~/Styles/sweetalert.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script type="text/javascript">
    function validateData() {
        if ($("#LastName").val() == "" || $("#FirstMidName").val() == "" || $("#HireDate").val() == "" || $("#OfficeAssignment").val() == "") {
            swal("Oops", "You have forgot to enter important data about Instructor", "error");
            return false;
        } else {
            return true;
        }
    }

    function Validate(ctl, event) {
        event.preventDefault();
        swal({
            title: "Do you want to save it?",
            text: "Please check Information before Submiting!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Save",
            cancelButtonText: "Cancel",
            closeOnConfirm: false,
            closeOnCancel: false
        },
            function (isConfirm) {
                if (isConfirm) {
                    if (validateData() == true) {
                        $("#CreateForm").submit();
                        swal("You have added the Instructor");
                    }
                } else {
                    swal("Cancelled", "You have Cancelled Form Submission!", "error");
                }
            });
    }
</script>